import java.util.Scanner;

/**Data Structures.
 * Assignment 4
 * Calc.java
 * I wanted to handle Exception for any exception,
 * not just null or out of bounds exceptions.
 * @author Kyle Verdeyen

 * @param <T>
 *
 */
public class Calc<T> extends ListStack<T> {
    static final Stack oStack = new ListStack<String>();
    static String finalanswer = "";

    /**RPN calculator.
     * . pops
     * ! exits
     * ? prints
     * @param args arguments
     * @throws Exception general exception
     */
    public static void main(String[] args) throws Exception {
        String in;
        Scanner oScan = new Scanner(System.in);
        whileloop: {
            while (oScan.hasNext()) {

                in = oScan.next();
                String[] parts = in.split(" ");
                
            }
        }
    }
    
    public static void handle(String[] parts) {
        whileloop: {
        for (int x = 0; x < parts.length; x++) {
            try {
                if (parts[x].equals("!")) {
                    break whileloop;
                } else if (parts[x].matches("\\d+")) {
                    oStack.push(parts[x]);
                } else if (parts[x].equals(".")) {
                    System.out.println(oStack.top());
                    oStack.pop();
                } else if (parts[x].equals("?")) {
                    System.out.println(oStack.toString());
                    //could check for +-*/% but we need to differentiate
                } else if (parts[x].equals("+")) {
                    add();
                } else if (parts[x].equals("-")) {
                    subtract();
                } else if (parts[x].equals("*")) {
                    multiply();
                } else if (parts[x].equals("/")) {
                    divide();
                } else if (parts[x].equals("%")) {
                    mod();
                    // and finally it's not anything we recognize...
                } else {
                    System.out.println("? Input error?");
                }
            } catch (Exception e) {
                System.out.println("? There was an error. It was: "
                        + e.toString());
            }
        }
    }
    }

    /**Add method.
     * @throws Exception general exception.
     */
    public static void add() throws Exception {
        try {
            String temp1 = (String) oStack.top();
            int a = Integer.parseInt(temp1);
            oStack.pop();
            String temp2 = (String) oStack.top();
            int b = Integer.parseInt(temp2);
            oStack.pop();
            int c = a + b;
            String answer = Integer.toString(c);
            finalanswer = answer;
            oStack.push(answer);
        } catch (Exception e) {
            System.out.println("? There was an error. It was: " + e.toString());
            oStack.push(finalanswer);
        }
    }

    /**Subtract method.
     * @throws Exception general exception.
     */
    public static void subtract() throws Exception {
        try {
            String temp1 = (String) oStack.top();
            int a = Integer.parseInt(temp1);
            oStack.pop();
            String temp2 = (String) oStack.top();
            int b = Integer.parseInt(temp2);
            oStack.pop();
            int c = a - b;
            String answer = Integer.toString(c);
            finalanswer = answer;
            oStack.push(answer);
        } catch (Exception e) {
            System.out.println("? There was an error. It was: " + e.toString());
            oStack.push(finalanswer);
        }
    }

    /**Multiply method.
     * @throws Exception general exception.
     */
    public static void multiply() throws Exception {
        try {
            String temp1 = (String) oStack.top();
            int a = Integer.parseInt(temp1);
            oStack.pop();
            String temp2 = (String) oStack.top();
            int b = Integer.parseInt(temp2);
            oStack.pop();
            int c = a * b;
            String answer = Integer.toString(c);
            finalanswer = answer;
            oStack.push(answer);
        } catch (Exception e) {
            System.out.println("? There was an error. It was: " + e.toString());
            oStack.push(finalanswer);
        }
    }

    /**Divide method.
     * @throws Exception general exception.
     */
    public static void divide() throws Exception {
        try {
            String temp1 = (String) oStack.top();
            int a = Integer.parseInt(temp1);
            oStack.pop();
            String temp2 = (String) oStack.top();
            int b = Integer.parseInt(temp2);
            oStack.pop();
            int c = a / b;
            String answer = Integer.toString(c);
            finalanswer = answer;
            oStack.push(answer);
        } catch (Exception e) {
            System.out.println("? There was an error. It was: " + e.toString());
            oStack.push(finalanswer);
        }
    }

    /**Mod method.
     * @throws Exception general exception.
     */
    public static void mod() throws Exception {
        try {
            String temp1 = (String) oStack.top();
            int a = Integer.parseInt(temp1);
            oStack.pop();
            String temp2 = (String) oStack.top();
            int b = Integer.parseInt(temp2);
            oStack.pop();
            int c = a % b;
            String answer = Integer.toString(c);
            finalanswer = answer;
            oStack.push(answer);
        } catch (Exception e) {
            System.out.println("? There was an error. It was: " + e.toString());
            oStack.push(finalanswer);
        }
    }
}
