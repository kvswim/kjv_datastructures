import java.util.Iterator;


/**HashMap.java.
 * Kyle Verdeyen
 * kverdey1@jhu.edu
 * 600.226
 * @author root
 *
 * @param <K> key.
 * @param <V> value.
 */
public class HashMap<K, V> implements Map<K, V> {
    private class Node<K, V> {
        int hash;
        K key;
        V value;
        Node<K, V> next;
        Node(K k, V v) {
            key = k;
            value = v;
        }
    }
    @Override
    public Iterator<K> iterator() {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public void insert(K k, V v) throws IllegalArgumentException {
        // TODO Auto-generated method stub

    }

    @Override
    public V remove(K k) throws IllegalArgumentException {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public void put(K k, V v) throws IllegalArgumentException {
        // TODO Auto-generated method stub
        Node temp;
        temp.hash = hash(k);
        temp.key = k;
        temp.value = v;
    }

    private int hash(K k) {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    public V get(K k) throws IllegalArgumentException {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public boolean has(K k) {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public int size() {
        // TODO Auto-generated method stub
        return 0;
    }

}
